(()=>{"use strict";var e={265:function(e,t,o){var n,r=this&&this.__createBinding||(Object.create?function(e,t,o,n){void 0===n&&(n=o);var r=Object.getOwnPropertyDescriptor(t,o);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[o]}}),Object.defineProperty(e,n,r)}:function(e,t,o,n){void 0===n&&(n=o),e[n]=t[o]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||(n=function(e){return n=Object.getOwnPropertyNames||function(e){var t=[];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(t[t.length]=o);return t},n(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var o=n(e),s=0;s<o.length;s++)"default"!==o[s]&&r(t,e,o[s]);return i(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.activate=function(e){console.log('Congratulations, "centrim-docgen" is now active!'),a.window.registerTreeDataProvider("centrimDocGenSidebarView",new l);let t=a.commands.registerCommand("centrim-docgen.generateDocs",async()=>{const t=a.window.createOutputChannel("Centrim DocGen");t.show(!0),t.appendLine("--- Centrim DocGen Session Started ---");const o=a.workspace.workspaceFolders;if(!o||0===o.length)return a.window.showErrorMessage("No workspace folder open. Please open a Git repository folder."),t.appendLine("Error: No workspace folder open."),void t.appendLine("--- Centrim DocGen Session Ended ---");const n=o[0].uri.fsPath,r=await a.window.showInputBox({prompt:"Enter number of recent diffs to process (e.g., 5). Leave empty for default.",placeHolder:"Default: 1 (latest) if refactoring.md exists, 5 otherwise"});let i=[];r&&!isNaN(parseInt(r))&&(i=["--diffno",r]);const s=await a.window.showQuickPick(["phi3","mistral","tinyllama","llama3"],{placeHolder:"Select Ollama model (e.g., 'phi3') or type custom name. Leave empty for interactive prompt.",canPickMany:!1});let d=[];s&&(d=["--model",s]);let l=[];"Yes"===await a.window.showQuickPick(["Yes","No"],{title:"Enable --watch mode? (Show raw Ollama output)",placeHolder:"No"})&&(l=["--watch"]);let u=[];if("Yes"===await a.window.showQuickPick(["Yes","No"],{title:"Use a custom query/prompt for Ollama?",placeHolder:"No"})){const e=await a.window.showInputBox({prompt:"Enter your custom query/prompt for Ollama:",placeHolder:"e.g., 'Summarize these changes in a very technical way.'"});e?u=["--custom-query",e]:a.window.showWarningMessage("No custom query entered. Proceeding with default prompt.")}const m=c.join(e.extensionPath,"src","python_scripts","git_doc_tool.py"),w="win32"===process.platform?"python":"python3",h=[m,...i,...d,...l,...u];t.appendLine(`Executing: ${w} ${h.join(" ")}`),t.appendLine(`In directory: ${n}`),t.appendLine("------------------------------------");try{const e=(0,p.spawn)(w,h,{cwd:n});e.stdout.on("data",e=>{t.append(e.toString())}),e.stderr.on("data",e=>{t.append(e.toString()),a.window.showErrorMessage(`Centrim DocGen Error: ${e.toString().split("\n")[0]}`)}),e.on("close",e=>{0===e?(a.window.showInformationMessage("Centrim DocGen: Documentation generated successfully!"),t.appendLine("Centrim DocGen: Script finished successfully."),a.commands.executeCommand("workbench.files.action.refreshExplorer")):(a.window.showErrorMessage(`Centrim DocGen: Script exited with code ${e}. Check output channel for details.`),t.appendLine(`Centrim DocGen: Script exited with code ${e}.`)),t.appendLine("--- Centrim DocGen Session Ended ---")}),e.on("error",e=>{a.window.showErrorMessage(`Failed to start Python script: ${e.message}. Make sure Python is installed and in your PATH.`),t.appendLine(`Error starting Python script: ${e.message}`),t.appendLine("--- Centrim DocGen Session Ended ---")})}catch(e){a.window.showErrorMessage(`An unexpected error occurred: ${e.message}`),t.appendLine(`Unexpected error: ${e.message}`),t.appendLine("--- Centrim DocGen Session Ended ---")}});e.subscriptions.push(t)},t.deactivate=function(){};const a=s(o(398)),c=s(o(928)),p=o(317);class d extends a.TreeItem{constructor(e,t,o){super(e,t),this.label=e,this.collapsibleState=t,this.command=o,this.tooltip=this.label,this.description="Click to generate documentation"}}class l{getTreeItem(e){return e}getChildren(e){if(e)return Promise.resolve([]);{const e={command:"centrim-docgen.generateDocs",title:"Generate Commit Documentation",tooltip:"Generate documentation for the latest Git commit(s) using Ollama."};return Promise.resolve([new d("Generate Docs",a.TreeItemCollapsibleState.None,e)])}}}},317:e=>{e.exports=require("child_process")},398:e=>{e.exports=require("vscode")},928:e=>{e.exports=require("path")}},t={},o=function o(n){var r=t[n];if(void 0!==r)return r.exports;var i=t[n]={exports:{}};return e[n].call(i.exports,i,i.exports,o),i.exports}(265);module.exports=o})();