(()=>{"use strict";var e={265:function(e,t,n){var o,r=this&&this.__createBinding||(Object.create?function(e,t,n,o){void 0===o&&(o=n);var r=Object.getOwnPropertyDescriptor(t,n);r&&!("get"in r?!t.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,o,r)}:function(e,t,n,o){void 0===o&&(o=n),e[o]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||(o=function(e){return o=Object.getOwnPropertyNames||function(e){var t=[];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[t.length]=n);return t},o(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n=o(e),s=0;s<n.length;s++)"default"!==n[s]&&r(t,e,n[s]);return i(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.activate=function(e){console.log('Congratulations, "centrim-docgen" is now active!');let t=a.commands.registerCommand("centrim-docgen.generateDocs",async()=>{const t=a.window.createOutputChannel("Centrim DocGen");t.show(!0),t.appendLine("--- Centrim DocGen Session Started ---");const n=a.workspace.workspaceFolders;if(!n||0===n.length)return a.window.showErrorMessage("No workspace folder open. Please open a Git repository folder."),t.appendLine("Error: No workspace folder open."),void t.appendLine("--- Centrim DocGen Session Ended ---");const o=n[0].uri.fsPath,r=await a.window.showInputBox({prompt:"Enter number of recent diffs to process (e.g., 5). Leave empty for default.",placeHolder:"Default: 1 (latest) if refactoring.md exists, 5 otherwise"});let i=[];r&&!isNaN(parseInt(r))&&(i=["--diffno",r]);const s=await a.window.showQuickPick(["phi3","mistral","tinyllama","llama3"],{placeHolder:"Select Ollama model (e.g., 'phi3') or type custom name. Leave empty for interactive prompt.",canPickMany:!1});let d=[];s&&(d=["--model",s]);let l=[];"Yes"===await a.window.showQuickPick(["Yes","No"],{title:"Enable --watch mode? (Show raw Ollama output)",placeHolder:"No"})&&(l=["--watch"]);const u=c.join(e.extensionPath,"src","python_scripts","git_doc_tool.py"),w="win32"===process.platform?"python":"python3",f=[u,...i,...d,...l];t.appendLine(`Executing: ${w} ${f.join(" ")}`),t.appendLine(`In directory: ${o}`),t.appendLine("------------------------------------");try{const e=(0,p.spawn)(w,f,{cwd:o});e.stdout.on("data",e=>{t.append(e.toString())}),e.stderr.on("data",e=>{t.append(e.toString()),a.window.showErrorMessage(`Centrim DocGen Error: ${e.toString().split("\n")[0]}`)}),e.on("close",e=>{0===e?(a.window.showInformationMessage("Centrim DocGen: Documentation generated successfully!"),t.appendLine("Centrim DocGen: Script finished successfully."),a.commands.executeCommand("workbench.files.action.refreshExplorer")):(a.window.showErrorMessage(`Centrim DocGen: Script exited with code ${e}. Check output channel for details.`),t.appendLine(`Centrim DocGen: Script exited with code ${e}.`)),t.appendLine("--- Centrim DocGen Session Ended ---")}),e.on("error",e=>{a.window.showErrorMessage(`Failed to start Python script: ${e.message}. Make sure Python is installed and in your PATH.`),t.appendLine(`Error starting Python script: ${e.message}`),t.appendLine("--- Centrim DocGen Session Ended ---")})}catch(e){a.window.showErrorMessage(`An unexpected error occurred: ${e.message}`),t.appendLine(`Unexpected error: ${e.message}`),t.appendLine("--- Centrim DocGen Session Ended ---")}});e.subscriptions.push(t)},t.deactivate=function(){};const a=s(n(398)),c=s(n(928)),p=n(317)},317:e=>{e.exports=require("child_process")},398:e=>{e.exports=require("vscode")},928:e=>{e.exports=require("path")}},t={},n=function n(o){var r=t[o];if(void 0!==r)return r.exports;var i=t[o]={exports:{}};return e[o].call(i.exports,i,i.exports,n),i.exports}(265);module.exports=n})();